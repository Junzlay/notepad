/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views.card;

import models.NoteObject;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import javax.swing.Icon;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.border.EmptyBorder;

/**
 *
 * @author 2ndyrGroupB
 */
public class Notecard extends javax.swing.JPanel implements ListCellRenderer<NoteObject> {

    /**
     * Creates new form Notecard
     */
      protected int strokeSize = 0;
    /** Color of shadow */
    protected Color shadowColor = Color.black;
    /** Sets if it drops shadow */
    protected boolean shady = true;
    /** Sets if it has an High Quality view */
    protected boolean highQuality = true;
    /** Double values for Horizontal and Vertical radius of corner arcs */
    protected Dimension arcs = new Dimension(20, 20);
    /** Distance between shadow border and opaque panel border */
    protected int shadowGap = 2;
    /** The offset of shadow.  */
    protected int shadowOffset = 0;
    /** The transparency value of shadow. ( 0 - 255) */
    protected int shadowAlpha = 50;
    public Notecard() {
        initComponents();
        this.repaint();
    }

@Override
   protected void paintComponent(Graphics g) {
       super.paintComponent(g);
       int width = getWidth();
       int height = getHeight();
       int shadowGap = this.shadowGap;
       Color shadowColorA = new Color(shadowColor.getRed(),
   shadowColor.getGreen(), shadowColor.getBlue(), shadowAlpha);
       Graphics2D graphics = (Graphics2D) g;

       //Sets antialiasing if HQ.
       if (highQuality) {
           graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
           RenderingHints.VALUE_ANTIALIAS_ON);
       }

       //Draws shadow borders if any.
       if (shady) {
           graphics.setColor(shadowColorA);
           graphics.fillRoundRect(
                   shadowOffset,// X position
                   shadowOffset,// Y position
                   width - strokeSize - shadowOffset, // width
                   height - strokeSize - shadowOffset, // height
                   arcs.width, arcs.height);// arc Dimension
       } else {
           shadowGap = 1;
       }

       //Draws the rounded opaque panel with borders.
       graphics.setColor(new Color(51,51,255));
       graphics.fillRoundRect(0, 0, width - shadowGap,
       height - shadowGap, arcs.width, arcs.height);
       graphics.setColor(getForeground());
       graphics.setStroke(new BasicStroke(strokeSize));
       graphics.drawRoundRect(0, 0, width - shadowGap,
       height - shadowGap, arcs.width, arcs.height);

       //Sets strokes to default, is better.
       graphics.setStroke(new BasicStroke());
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cardContainer = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        content = new javax.swing.JLabel();
        addToFavorite = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        date = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(290, 55));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cardContainer.setBackground(new java.awt.Color(102, 102, 255));
        cardContainer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(cardContainer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 103, 270, -1));

        title.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("Title");
        add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 190, 30));

        content.setFont(new java.awt.Font("Yu Gothic UI", 0, 11)); // NOI18N
        content.setForeground(new java.awt.Color(204, 204, 204));
        content.setText("Content");
        add(content, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 170, 30));

        addToFavorite.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        addToFavorite.setForeground(new java.awt.Color(51, 51, 51));
        addToFavorite.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addToFavorite.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/heart-multiple-outline.png"))); // NOI18N
        addToFavorite.setToolTipText("add to Favorites");
        addToFavorite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addToFavoriteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addToFavoriteMouseExited(evt);
            }
        });
        add(addToFavorite, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 30, -1));

        time.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        time.setForeground(new java.awt.Color(204, 204, 204));
        time.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        time.setText("07:21 am");
        time.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 80, 20));

        date.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        date.setForeground(new java.awt.Color(204, 204, 204));
        date.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        date.setText("January 17, 2001");
        date.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 80, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void addToFavoriteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToFavoriteMouseEntered

        
    }//GEN-LAST:event_addToFavoriteMouseEntered

    private void addToFavoriteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToFavoriteMouseExited
       
    }//GEN-LAST:event_addToFavoriteMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addToFavorite;
    private javax.swing.JPanel cardContainer;
    private javax.swing.JLabel content;
    private javax.swing.JLabel date;
    private javax.swing.JLabel time;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

    @Override
    public Component getListCellRendererComponent(JList<? extends NoteObject> list, NoteObject value, int index, boolean isSelected, boolean cellHasFocus) {
        this.title.setText(value.getTitle());
       this.date.setText(value.getDate());
       this.addToFavorite.setIcon(new javax.swing.ImageIcon(getClass().getResource(value.getFavicon())));
       this.content.setText(value.getContent());
       this.time.setText(value.getTime());
       
       return this;
    }
}
